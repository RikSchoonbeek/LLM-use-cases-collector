# Generated by Django 4.2 on 2024-11-10 20:17

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Redditor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=255, unique=True)),
                ("created_utc", models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Subreddit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("display_name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("description_html", models.TextField(blank=True)),
                ("public_description", models.TextField(blank=True)),
                ("created_utc", models.DateTimeField(null=True)),
                ("over_18", models.BooleanField(default=False)),
                ("subscribers", models.PositiveIntegerField(default=0)),
                ("can_assign_link_flair", models.BooleanField(default=False)),
                ("can_assign_user_flair", models.BooleanField(default=False)),
                ("spoilers_enabled", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reddit_id", models.CharField(max_length=50, unique=True)),
                ("title", models.CharField(max_length=500)),
                ("selftext", models.TextField(blank=True)),
                ("url", models.URLField(blank=True, max_length=2000)),
                ("created_utc", models.DateTimeField()),
                ("score", models.IntegerField(default=0)),
                ("upvote_ratio", models.FloatField(default=1.0)),
                ("num_comments", models.PositiveIntegerField(default=0)),
                ("over_18", models.BooleanField(default=False)),
                ("spoiler", models.BooleanField(default=False)),
                ("stickied", models.BooleanField(default=False)),
                ("distinguished", models.BooleanField(default=False, null=True)),
                ("edited_utc", models.DateTimeField(blank=True, null=True)),
                ("locked", models.BooleanField(default=False)),
                ("saved", models.BooleanField(default=False)),
                ("is_original_content", models.BooleanField(default=False)),
                ("is_self", models.BooleanField(default=False)),
                ("permalink", models.CharField(max_length=500)),
                (
                    "author_flair_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "link_flair_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "link_flair_template_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="collector.redditor",
                    ),
                ),
                (
                    "subreddit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="collector.subreddit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reddit_id", models.CharField(max_length=50, unique=True)),
                ("body", models.TextField()),
                ("body_html", models.TextField()),
                ("created_utc", models.DateTimeField()),
                ("score", models.IntegerField(default=0)),
                ("distinguished", models.BooleanField(default=False)),
                ("edited_utc", models.DateTimeField(blank=True, null=True)),
                ("stickied", models.BooleanField(default=False)),
                ("saved", models.BooleanField(default=False)),
                ("is_submitter", models.BooleanField(default=False)),
                ("permalink", models.CharField(max_length=500)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="collector.redditor",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="collector.comment",
                    ),
                ),
                (
                    "submission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="collector.submission",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
